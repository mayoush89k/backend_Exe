1.Crud
1.1 â€“ Write a MongoDB query to display all the documents in the restaurant collection.
db.restaurants.find()
db.restaurants.find({})

1.2 - Write a MongoDB query to display all restaurants that have a specific cuisine
db.restaurants.find({typeOfCuisine:"Fish & Sea Food Meals"})

1.3 - Write a MongoDb query that displays only kosher restaurants
db.restaurants.find({kosher_halal:true})

1.4 - Write a MongoDb query that displays only specific cities restaurants
db.restaurants.find({"address.city":"Jerusalem"})

1.5 Write a MongoDb query to display a specific restaurants address
db.restaurants.findOne({$and:[{"address.city":"Haifa"},{"address.street":"Stella Maris"},{"address.coordinates":[ 32.827934, 34.970079 ]}]})

1.6 - Write a MongoDB query to display specific restaurants coordinates
db.restaurants.findOne({"address.coordinates":[ 32.052987, 34.749909 ]})

1.7. - Write a MongoDB query that should display all restaurants in ascending order by restaurant name.
db.restaurants.find().sort({name:1})

1.8 - Write a MongoDB query that should display all restaurants in ascending order by city names.
db.restaurants.find().sort({"address.city":1})

1.9 - Update a specific restaurant's name
db.restaurants.updateOne({name:"The Old Man and the Sea"},{$set:{name:"The Old Man & The Sea"}})

1.10 - Update a specific restaurant by adding a new review.
db.restaurants.updateOne({name:"The Old Man & The Sea"},{$push:{reviews:{date:ISODate("2024-01-03T21:00:00.000Z"), score: 4.5 }}})      

1.11 - Update all restaurants to be kosher
db.restaurants.updateMany({}, {$set : { "kosher_hal:true}})

1.12 - Delete a specific restaurant
db.restaurants.deleteMany({name:"Retro"})

1.13 - Delete all restaurants
db.restaurants.drop()

==========================================================

2. forEach Queries

2.1 - Write a MongoDB query to print all restaurant names.
db.restaurants.find().forEach(function(restaurant) {print( restaurant.name)})

2.2 - Write a MongoDB query to print all restaurant cities
db.restaurants.find().forEach(function(restaurant) {print( restaurant.address.city)})

2.3 - Write a MongoDb query to print all restaurant coordinates
db.restaurants.find().forEach(function(restaurant) {print( restaurant.address.coordinates)})

==========================================================

3. Advanced Queries
3.1 - Query for restaurant names that start with a specific alphabet
db.restaurants.find({name:/^T/i}).pretty()

3.2 - Query how many documents you have from the restaurant collection.
db.restaurants.count()
3.3 - Write a MongoDb query to get restaurants that include reviews from a specific date.
findMyRestaurant> db.restaurants.find({"reviews.date": ISODate('2021-10-27T19:00:00.000Z')})

==========================================================

4. Aggregation operations
4.1- Write a mongoDb query to display all restaurants average score.
db.restaurants.aggregate([{$group:{_id:"$address.city",averageScore:{$avg:'$reviews.score'}}}])

4.2 - Write a MongoDB query to display a specific restaurant average score
db.restaurants.aggregate([{$group:{_id:"Syraan",averageScore:{$avg:'$reviews.score'}}}])
